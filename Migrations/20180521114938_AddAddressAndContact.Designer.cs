// <auto-generated />
using Citador.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Citador.Migrations
{
  [DbContext(typeof(CitadorContext))]
  [Migration("20180521114938_AddAddressAndContact")]
  partial class AddAddressAndContact
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
          .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

      modelBuilder.Entity("Citador.Models.Address", b =>
          {
            b.Property<uint>("Id")
                      .ValueGeneratedOnAdd();

            b.Property<string>("City")
                      .HasMaxLength(70);

            b.Property<string>("Country")
                      .HasMaxLength(65);

            b.Property<string>("Line1")
                      .HasMaxLength(100);

            b.Property<string>("Line2")
                      .HasMaxLength(100);

            b.Property<uint>("PostalCode")
                      .HasMaxLength(10);

            b.Property<string>("State")
                      .HasMaxLength(65);

            b.Property<int>("UserId");

            b.HasKey("Id");

            b.HasIndex("UserId");

            b.ToTable("Addresses");
          });

      modelBuilder.Entity("Citador.Models.ContactInfo", b =>
          {
            b.Property<uint>("Id")
                      .ValueGeneratedOnAdd();

            b.Property<string>("Email2")
                      .HasMaxLength(120);

            b.Property<string>("Phone")
                      .HasMaxLength(40);

            b.Property<string>("Phone2")
                      .HasMaxLength(40);

            b.Property<int>("UserId");

            b.HasKey("Id");

            b.HasIndex("UserId");

            b.ToTable("ContactInfos");
          });

      modelBuilder.Entity("Citador.Models.Address", b =>
          {
            b.HasOne("Citador.Models.User", "User")
                      .WithMany()
                      .HasForeignKey("UserId")
                      .OnDelete(DeleteBehavior.Cascade);
          });

      modelBuilder.Entity("Citador.Models.ContactInfo", b =>
          {
            b.HasOne("Citador.Models.User", "User")
                      .WithMany()
                      .HasForeignKey("UserId")
                      .OnDelete(DeleteBehavior.Cascade);
          });
#pragma warning restore 612, 618
    }
  }
}
